{"version":3,"file":"static/js/600.f68a5ed3.chunk.js","mappings":"gUAae,SAASA,IACtB,IAAAC,EAA0BC,EAAAA,SAAe,CACvCC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,IACPC,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GALKQ,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAOhBI,EAAe,SAACC,EAAQC,GAAI,OAAK,SAACC,IACnB,YAAfA,EAAMC,MAAqC,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAI9DN,GAAQO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAK,IAAAS,EAAAA,EAAAA,GAAA,GAAGN,EAASC,IACjC,CAAE,EAEIM,EAAO,SAACP,GAAM,OAClBQ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CAAEC,MAAkB,QAAXX,GAA+B,WAAXA,EAAsB,OAAS,KAChEY,KAAK,eACLC,QAASd,EAAaC,GAAQ,GAC9Bc,UAAWf,EAAaC,GAAQ,GAAOe,SAAA,EAEvCC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAF,SACF,CAAC,QAAS,UAAW,aAAc,UAAUG,KAAI,SAACC,EAAMC,GAAK,OAC5DJ,EAAAA,EAAAA,KAACK,EAAAA,GAAQ,CAAYC,gBAAc,EAAAP,UACjCP,EAAAA,EAAAA,MAACe,EAAAA,EAAc,CAAAR,SAAA,EACbC,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CAAAT,SACVK,EAAQ,IAAM,GAAIJ,EAAAA,EAAAA,KAACS,EAAAA,EAAS,KAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,OAE9CV,EAAAA,EAAAA,KAACW,EAAAA,EAAY,CAACC,QAAST,EAAO,MAAQnB,QAL3BmB,EAOJ,OAGfH,EAAAA,EAAAA,KAACa,EAAAA,EAAO,KACRb,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAF,SACF,CAAC,WAAY,QAAS,QAAQG,KAAI,SAACC,EAAMC,GAAK,OAC7CJ,EAAAA,EAAAA,KAACK,EAAAA,GAAQ,CAAYC,gBAAc,EAAAP,UACjCP,EAAAA,EAAAA,MAACe,EAAAA,EAAc,CAAAR,SAAA,EACbC,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CAAAT,SACVK,EAAQ,IAAM,GAAIJ,EAAAA,EAAAA,KAACS,EAAAA,EAAS,KAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,OAE9CV,EAAAA,EAAAA,KAACW,EAAAA,EAAY,CAACC,QAAST,QALZA,EAOJ,QAGX,EAGR,OACEH,EAAAA,EAAAA,KAAA,OAAAD,SACG,CAAC,OAAQ,OAAQ,QAAS,MAAO,UAAUG,KAAI,SAAClB,GAAM,OACrDQ,EAAAA,EAAAA,MAAClB,EAAAA,SAAc,CAAAyB,SAAA,EACbC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACjB,QAASd,EAAaC,GAAQ,GAAMe,SAAEf,KAC9CgB,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CACL/B,OAAQA,EACRC,KAAMJ,EAAMG,GACZgC,QAASjC,EAAaC,GAAQ,GAAOe,SAEpCR,EAAKP,OAPWA,EASJ,KAIzB,C","sources":["components/TemporaryDrawer.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\n\nexport default function TemporaryDrawer() {\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem key={text} disablePadding>\n            <ListItemButton>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text + \" - \" + anchor} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem key={text} disablePadding>\n            <ListItemButton>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n\n  return (\n    <div>\n      {['left', 'left', 'right', 'top', 'bottom'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}"],"names":["TemporaryDrawer","_React$useState","React","top","left","bottom","right","_React$useState2","_slicedToArray","state","setState","toggleDrawer","anchor","open","event","type","key","_objectSpread","_defineProperty","list","_jsxs","Box","sx","width","role","onClick","onKeyDown","children","_jsx","List","map","text","index","ListItem","disablePadding","ListItemButton","ListItemIcon","InboxIcon","MailIcon","ListItemText","primary","Divider","Button","Drawer","onClose"],"sourceRoot":""}