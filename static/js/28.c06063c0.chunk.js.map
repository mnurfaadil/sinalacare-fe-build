{"version":3,"file":"static/js/28.c06063c0.chunk.js","mappings":"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","sources":["config/api.js","pages/AssesmentCheckBox.js","pages/Assesment.js"],"sourcesContent":["\nconst BASE_URL = 'https://sinalacare-api.neonauby.com/api/v1';\n\nmodule.exports = {\n    BASE_URL\n}\n","import React, { useState } from \"react\";\n\nfunction AssesmentCheckBox({\n    label,\n    idx,\n    refCheckBoxJawaban,\n    refSetCheckBoxJawaban,\n    idxSoal,\n    opsi\n}) {\n\n    const [isChecked, setIsChecked] = useState(refCheckBoxJawaban[idxSoal].jawaban[idx] != '');\n\n    const handleChange = event => {\n        if (event.target.checked) {\n            let temp_check_box = refCheckBoxJawaban;\n            temp_check_box[idxSoal].jawaban[idx] = opsi;\n            refSetCheckBoxJawaban(temp_check_box);\n        } else {\n            let temp_check_box = refCheckBoxJawaban;\n            temp_check_box[idxSoal].jawaban[idx] = '';\n            refSetCheckBoxJawaban(temp_check_box);\n        }\n        setIsChecked(isChecked => !isChecked);\n    };\n\n    return (\n        <div className={\"flex items-center\"}>\n            <input\n                defaultChecked={isChecked}\n                onChange={handleChange}\n                id={\"checked-checkbox-\" + idx}\n                type=\"checkbox\"\n                value={isChecked}\n                className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\" />\n            <label htmlFor={\"checked-checkbox-\" + idx} className={\"ml-2 text-md font-large text-gray-900\"}>{label}</label>\n        </div>);\n}\n\nexport default AssesmentCheckBox;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nimport soal from './../data/assesment.json';\nimport jawaban from './../data/assesment_history.json';\n\nimport axios from \"axios\";\nimport tokenOrganizer from './../util/tokenOrganizer';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nimport configApi from './../config/api';\nimport { key } from \"localforage\";\nimport AssesmentCheckBox from \"./AssesmentCheckBox\";\n\nfunction capitalizeFLetter(string) {\n    return string.charAt(0).toUpperCase() +\n        string.slice(1);\n}\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport default function Page() {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => {\n\n        console.log(checkBoxJawaban);\n        // setOpen(true)\n    };\n    const handleClose = () => setOpen(false);\n    const navigate = useNavigate();\n\n    const [mahasiswa, setMahasiswa] = useState({});\n    const [nestedSoalFlagOpsi, setNestedSoalFlagOpsi] = useState({});\n    const [nestedSoalFlagOpsiMaster, setNestedSoalFlagOpsiMaster] = useState({});\n    const [nestedSoalFlag, setNestedSoalFlag] = useState(null);\n\n    const [masterSoal, setMasterSoal] = useState([]);\n    const [stepSoal, setStepSoal] = useState(0);\n    const [currentSoal, setCurrentSoal] = useState(masterSoal[stepSoal]);\n    const [textNext, setTextNext] = useState(\"Selanjutnya\");\n    const [opsiValue, setOpsiValue] = useState(0);\n    const [calculateNilai, setCalculateNilai] = useState(0);\n    // const [checkBox, setCheckBox] = useState(null);\n    const [checkBoxJawaban, setCheckBoxJawaban] = useState({});\n    const [jumlahSoal, setJumlahSoal] = useState(masterSoal.length);\n    const [jumlahJawaban, setJumlahJawaban] = useState(0);\n    const [percentage, setPercentage] = useState(((stepSoal + 1 / masterSoal.length) * 100).toFixed(0));\n    const [isDijawab, setIsDijawab] = useState(0);\n    const [firstLetterUppercase, setFirstLetterUppercase] = useState('');\n\n\n    const params = useParams();\n    const studi_kasus = params.studiKasus;\n\n    useEffect(() => {\n        setIsDijawab()\n    }, [checkBoxJawaban])\n\n    useEffect(() => {\n        if (stepSoal == masterSoal.length - 1) {\n            setTextNext(\"Selesai\")\n        } else {\n            setTextNext(\"Selanjutnya\")\n        }\n    }, [nestedSoalFlagOpsiMaster])\n\n    useEffect(() => {\n        if (stepSoal == masterSoal.length - 1) {\n            setTextNext(\"Selesai\")\n        } else {\n            setTextNext(\"Selanjutnya\")\n        }\n    }, [stepSoal])\n\n    useEffect(() => {\n        if (currentSoal &&\n            currentSoal.assesment_mapping_assesment_mapping_parent_assesment_idToassesment &&\n            currentSoal.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.length > 0) {\n            currentSoal.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.forEach(element => {\n                console.log(element)\n                // setNestedSoalFlagOpsi();\n            });\n        }\n    }, [nestedSoalFlag])\n\n\n    useEffect(() => {\n        let token = tokenOrganizer.getToken();\n\n        axios\n            .get(`${configApi.BASE_URL}/assesment/${studi_kasus}/soal`, {\n                headers: {\n                    Authorization: \"Bearer \" + token\n                }\n            })\n            .then((response) => {\n                let soal_response = response.data.data;\n                let blanko_form = {};\n                let blanko_nested = {};\n                soal_response.forEach((element, ix) => {\n                    let single_blanko = {\n                        id: element.id,\n                        jawaban: '',\n                    }\n                    if (element.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.length > 0) {\n                        single_blanko[\"nested_jawaban\"] = {};\n                        element.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.forEach((val) => {\n                            single_blanko[\"nested_jawaban\"][val.assesment_assesment_mapping_assesment_idToassesment.id] = {\n                                id: val.assesment_assesment_mapping_assesment_idToassesment.id,\n                                opsi: val.opsi,\n                                jawaban: '',\n                            }\n                            blanko_nested[val.assesment_assesment_mapping_assesment_idToassesment.id] = val.assesment_assesment_mapping_assesment_idToassesment;\n                        });\n                    }\n                    if (element.tipe_soal == \"multi_opsi\") {\n                        single_blanko['jawaban'] = Array(element.assesment_opsi.length).fill('');\n                    }\n                    blanko_form[element.id] = single_blanko;\n                });\n                setCheckBoxJawaban(blanko_form);\n                setMasterSoal(soal_response);\n                setPercentage(0 / soal_response.length);\n                setJumlahSoal(soal_response.length);\n                setCurrentSoal(soal_response[0]);\n                setStepSoal(0);\n            }).catch((err) => {\n                console.error(err)\n                //   setOpen(true)\n            });\n        axios\n            .get(`${configApi.BASE_URL}/profile-mahasiswa`, {\n                headers: {\n                    Authorization: \"Bearer \" + token\n                }\n            })\n            .then((response) => {\n                let data = response.data.data;\n                setMahasiswa(data);\n            }).catch((err) => {\n                console.error(err)\n                //   setOpen(true)\n            });\n\n        axios\n            .get(`${configApi.BASE_URL}/studi_kasus/${studi_kasus}/header`, {\n                headers: {\n                    Authorization: \"Bearer \" + token\n                }\n            })\n            .then((response) => {\n                let data = response.data.data;\n                setFirstLetterUppercase(capitalizeFLetter(data.nama));\n            }).catch((err) => {\n                console.error(err)\n                //   setOpen(true)\n            });\n    }, [])\n\n    useEffect(() => {\n        // let temp_check_box = checkBoxJawaban;\n        // if (currentSoal?.tipe_soal == \"multi_opsi\") {\n        //     temp_check_box[stepSoal] = Array(currentSoal?.assesment_opsi?.length).fill(null);\n        // }\n        // setCheckBoxJawaban(temp_check_box);\n    }, [stepSoal])\n\n\n\n    function handleClickNavigate(path) {\n        navigate(path);\n    }\n\n    function checkMultipleJawaban(toCompare, keyFind) {\n        keyFind.forEach((v, i) => {\n            if (toCompare.indexOf(v) > -1) {\n                return true;\n            }\n        });\n        return false;\n    }\n\n    function setOpsiRadio(id, opsi, index) {\n        let nextCheckBox = checkBoxJawaban;\n        nextCheckBox[id].jawaban = opsi;\n        setCheckBoxJawaban.bind(this, nextCheckBox);\n        setNestedSoalFlag(index);\n    }\n\n    return (\n        <>\n            <section className=\"absolute top-0 w-full h-screen bg-slate-100\">\n                <div className=\"py-6 bg-gray-900 text-center text-white\">\n                    Assesment {firstLetterUppercase}\n                </div>\n                <div className={`w-full flex flex-col sm:flex-row flex-grow overflow-hidden bg-blue-500`}>\n                    <main role=\"main\" className=\"w-full flex-grow p-4 overflow-auto bg-slate-100 text-gray-700\">\n                        <div className={`h-full w-full bg-white p-6 rounded text-lg max-h-[80vh] flex flex-col space-y-5 overflow-y-auto`}>\n                            <div className=\"w-full flex justify-end\">\n                                <button className=\"w-[240px]justify-end text-center bg-blue-500 hover:bg-slate-200 text-white hover:text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                                    type=\"button\"\n                                    onClick={() => {\n                                        // if (textNext == \"Selesai\") {\n                                        //     handleOpen();\n                                        // } else {\n                                        let newStep = stepSoal + 1\n                                        if (newStep < masterSoal.length) {\n                                            // setCalculateNilai(calculateNilai + opsiValue)\n                                            setStepSoal(newStep)\n                                            setCurrentSoal(masterSoal[newStep])\n                                            setJumlahJawaban(newStep + 1)\n                                            setPercentage((((newStep + 1) / masterSoal.length) * 100).toFixed(2))\n                                            if (newStep == masterSoal.length - 1) {\n                                                setTextNext(\"Selesai\")\n                                            }\n                                        }\n                                        // }\n                                    }} >\n                                    <span className=\"text-center w-full\">Selanjutnya</span>\n                                </button>\n                            </div>\n                            <div className=\"underline\">{currentSoal?.pertanyaan}</div>\n\n                            <div>{currentSoal?.deskripsi}</div>\n                            {currentSoal?.assesment_opsi.map(function (key, index) {\n                                if (currentSoal.tipe_soal == \"multi_opsi\") {\n                                    return (<AssesmentCheckBox\n                                        key={`${key.key_opsi}-${currentSoal.id}`}\n                                        opsi={key.key_opsi}\n                                        idx={index}\n                                        label={key.label_opsi}\n                                        refCheckBoxJawaban={checkBoxJawaban}\n                                        refSetCheckBoxJawaban={setCheckBoxJawaban}\n                                        idxSoal={currentSoal.id}\n                                    />);\n                                } else {\n                                    return (<div className={\"flex items-center\"} key={key.key_opsi}>\n                                        <div className=\"flex flex-col\">\n                                            <div>\n                                                <input checked={checkBoxJawaban[currentSoal.id].jawaban === key.key_opsi}\n                                                    onChange={(e) => {\n                                                        setOpsiRadio(currentSoal.id, key.key_opsi, index)\n                                                    }}\n                                                    id={\"checked-checkbox-\" + `${key.key_opsi}-${currentSoal.id}`}\n                                                    name=\"opsi\"\n                                                    type=\"radio\"\n                                                    value={key.key_opsi}\n                                                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\" />\n                                                <label htmlFor={\"checked-checkbox-\" + key.key_opsi} className={\"ml-2 text-md font-large text-gray-900 cursor-pointer\"} onClick={() => {\n                                                    setOpsiRadio(currentSoal.id, key.key_opsi, index)\n                                                }}>{key.label_opsi}</label>\n\n                                            </div>\n                                            <div>\n                                                {checkBoxJawaban &&\n                                                currentSoal &&\n                                                nestedSoalFlag &&\n                                                checkBoxJawaban[currentSoal.id].jawaban &&\n                                                checkBoxJawaban[currentSoal.id].jawaban[nestedSoalFlag] &&\n                                                currentSoal.assesment_mapping_assesment_mapping_parent_assesment_idToassesment?.length > 0 &&\n                                                (\n                                                    <div className={\"flex items-center\"}>\n                                                        Anakan |\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>)\n                                }\n                            })}\n\n\n\n                        </div>\n                    </main>\n\n                    <div className=\"sm:w-1/3 md:1/4 w-full flex-shrink flex-grow-0 p-4 bg-slate-100\">\n                        <div className=\"sticky p-4 w-full rounded bg-white h-[80vh] text-gray-700 flex flex-col justify-between\">\n                            <div className=\"grid grid-cols-4 gap-2\">\n                                {masterSoal?.map(function ({ id, pertanyaan, tipe_soal }, index) {\n                                    let render_pertanyaan = pertanyaan;\n                                    if (stepSoal === index) {\n                                        render_pertanyaan = (<strong>{pertanyaan}</strong>);\n                                    }\n                                    let a_class = '';\n\n                                    if (tipe_soal == \"multi_opsi\") {\n                                        let keyFind = [];\n                                        masterSoal[index].assesment_opsi.forEach((v, i) => {\n                                            keyFind.push(v.key_opsi);\n                                        })\n                                        if (checkMultipleJawaban(checkBoxJawaban[id].jawaban, keyFind)) {\n                                            a_class = ' bg-yellow-500 text-white';\n                                        }\n\n                                    } else if (checkBoxJawaban[id].jawaban) {\n                                        a_class = ' bg-green-500 text-white';\n                                    }\n\n                                    if (index == stepSoal) {\n                                        a_class = ' bg-purple-500 text-white';\n                                    }\n\n\n                                    return (\n                                        <button className={\"w-14 h-14 p-4 border-4\" + a_class}\n                                            onClick={() => {\n                                                setCurrentSoal(masterSoal[index])\n                                                setStepSoal(index)\n                                                setCheckBoxJawaban(checkBoxJawaban)\n                                                // if (index == masterSoal.length - 1) {\n                                                //     setTextNext(\"Selesai\")\n                                                // } else {\n                                                //     setTextNext(\"Selanjutnya\")\n                                                // }\n                                            }} key={id}\n                                        >\n                                            {index + 1}\n                                        </button>);\n                                })}\n\n                            </div>\n\n                            <button className=\"text-center bg-red-500 hover:bg-slate-200 text-white hover:text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                                type=\"button\"\n                                onClick={() => {\n                                    handleOpen();\n                                }} >\n                                <span className=\"text-center w-full\">Akhiri Ujian</span>\n                            </button>\n\n                        </div>\n                    </div>\n                </div>\n                {/* <footer className=\"mt-auto bg-slate-100 h-auto max-w-6xl mx-auto flex justify-between text-white py-2\">\n                    {stepSoal != 0 && (\n                        <button className={\"pointer-cursor bg-blue-400 text-white border-1 border-neutral-700  font-bold py-2 px-4 rounded inline-flex items-center hover:bg-slate-200 hover:text-gray-600 hover:border-neutral-500\"}\n                            type=\"button\"\n                            // disabled={textNext == \"Selesai\"}\n                            onClick={() => {\n\n                                let newStep = stepSoal - 1\n                                if (newStep >= 0) {\n                                    setStepSoal(newStep)\n                                    setCurrentSoal(masterSoal[newStep])\n\n\n                                    setJumlahJawaban(newStep)\n                                    setPercentage((((newStep) / masterSoal.length) * 100).toFixed(2))\n                                }\n                            }}\n                        >\n                            <span>Sebelumnya</span>\n                        </button>\n                    )}\n                    {stepSoal == 0 && (\n                        <div></div>\n                    )}\n                </footer> */}\n            </section>\n            {/* <section className=\"absolute top-0 left-0 w-full p-4\" id=\"header\">\n                <button className=\"bg-white hover:bg-slate-400 text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                    type=\"button\"\n                    onClick={() => handleClickNavigate('/studi-kasus/' + studi_kasus)}>\n                    <span>Kembali</span>\n                </button>\n            </section> */}\n            <section className=\"absolute top-0 right-0 p-4 text-white\" id=\"header-mahasiswa\">\n                <div className=\"flex justify-end\">\n                    <div className=\"pr-5\">\n                        <p>{mahasiswa.nama}</p>\n                        <p>{mahasiswa.nim}</p>\n                    </div>\n                    <img\n                        alt='Avatar Mahasiswa'\n                        src={mahasiswa?.imageUrl ?? 'https://ui-avatars.com/api/?background=random&name=Avatar'}\n                        className=\"img-avatar-kasus rounded-full h-[45px]\"\n                    />\n                </div>\n            </section>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Terima kasih\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Nilai anda : {calculateNilai}\n                    </Typography>\n                </Box>\n            </Modal>\n        </>\n    )\n}"],"names":["module","exports","BASE_URL","_ref","label","idx","refCheckBoxJawaban","refSetCheckBoxJawaban","idxSoal","opsi","_useState","useState","jawaban","_useState2","_slicedToArray","isChecked","setIsChecked","_jsxs","className","children","_jsx","defaultChecked","onChange","event","target","checked","temp_check_box","id","type","value","htmlFor","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Page","_mahasiswa$imageUrl","_React$useState","React","_React$useState2","open","setOpen","useNavigate","mahasiswa","setMahasiswa","_useState3","_useState4","_useState5","_useState6","nestedSoalFlagOpsiMaster","_useState7","_useState8","nestedSoalFlag","setNestedSoalFlag","_useState9","_useState10","masterSoal","setMasterSoal","_useState11","_useState12","stepSoal","setStepSoal","_useState13","_useState14","currentSoal","setCurrentSoal","_useState15","_useState16","setTextNext","_useState17","_useState18","_useState19","_useState20","calculateNilai","_useState21","_useState22","checkBoxJawaban","setCheckBoxJawaban","_useState23","length","_useState24","setJumlahSoal","_useState25","_useState26","setJumlahJawaban","_useState27","toFixed","_useState28","setPercentage","_useState29","_useState30","setIsDijawab","_useState31","_useState32","firstLetterUppercase","setFirstLetterUppercase","studi_kasus","useParams","studiKasus","setOpsiRadio","index","nextCheckBox","bind","this","useEffect","assesment_mapping_assesment_mapping_parent_assesment_idToassesment","forEach","element","console","log","token","tokenOrganizer","axios","get","concat","configApi","headers","Authorization","then","response","soal_response","data","blanko_form","blanko_nested","ix","single_blanko","val","assesment_assesment_mapping_assesment_idToassesment","tipe_soal","Array","assesment_opsi","fill","catch","err","error","string","nama","charAt","toUpperCase","slice","_Fragment","role","onClick","newStep","pertanyaan","deskripsi","map","key","AssesmentCheckBox","key_opsi","label_opsi","e","name","_currentSoal$assesmen","a_class","keyFind","v","i","push","toCompare","indexOf","checkMultipleJawaban","nim","alt","src","imageUrl","Modal","onClose","Box","sx","Typography","variant","component","mt"],"sourceRoot":""}