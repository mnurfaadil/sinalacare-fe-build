{"version":3,"file":"static/js/458.4a772d32.chunk.js","mappings":"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","sources":["config/api.js","pages/AssesmentCheckBox.js","pages/Assesment.js","pages/AssesmentAlert.js"],"sourcesContent":["\nconst BASE_URL = 'https://sinalacare-api.neonauby.com/api/v1';\n\nmodule.exports = {\n    BASE_URL\n}\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport AssesmentRadio from \"./AssesmentRadio\";\n\nfunction AssesmentCheckBox({\n    label,\n    idx,\n    refCheckBoxJawaban,\n    refSetCheckBoxJawaban,\n    idxSoal,\n    opsi,\n    soal\n}) {\n\n    const [flagReRender, setFlagReRender] = useState(false);\n    const [showChild, setShowChild] = useState(false);\n    const [soalChild, setSoalChild] = useState({});\n    const [refChildJawaban, setRefChildJawaban] = useState([]);\n\n    const [isChecked, setIsChecked] = useState(refCheckBoxJawaban[idxSoal].jawaban[idx] != '');\n\n    useEffect(() => {\n        if (refCheckBoxJawaban[idxSoal].nested_jawaban) {\n            let result = Object.keys(refCheckBoxJawaban[idxSoal]?.nested_jawaban).map((key) => refCheckBoxJawaban[idxSoal].nested_jawaban[key]);\n            if (result.jawaban != '') {\n                setRefChildJawaban(result);\n                soal.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.forEach(element => {\n                    if (result[idx].id == element?.assesment_assesment_mapping_assesment_idToassesment?.id) {\n                        const newEl = {\n                            ...element.assesment_assesment_mapping_assesment_idToassesment,\n                            parent_id: element.parent_assesment_id,\n                            opsi_jawaban: element.opsi,\n                            opsi_jawaban_index: idx,\n                        };\n                        setSoalChild(newEl);\n                        setShowChild(true);\n                    }\n                });\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        if (refCheckBoxJawaban[idxSoal].nested_jawaban) {\n            let result = Object.keys(refCheckBoxJawaban[idxSoal]?.nested_jawaban).map((key) => refCheckBoxJawaban[idxSoal].nested_jawaban[key]);\n            if (result.jawaban != '') {\n                setRefChildJawaban(result);\n                soal.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.forEach(element => {\n                    if (result[idx].id == element?.assesment_assesment_mapping_assesment_idToassesment?.id) {\n                        const newEl = {\n                            ...element.assesment_assesment_mapping_assesment_idToassesment,\n                            parent_id: element.parent_assesment_id,\n                            opsi_jawaban: element.opsi,\n                            opsi_jawaban_index: idx,\n                        };\n                        setSoalChild(newEl);\n                        setShowChild(true);\n                    }\n                });\n            }\n        }\n    }, [isChecked]);\n\n    const handleChangeCheckbox = (checked) => {\n\n        if (checked) {\n            let temp_check_box = refCheckBoxJawaban;\n            temp_check_box[idxSoal].jawaban[idx] = opsi;\n            refSetCheckBoxJawaban(temp_check_box);\n        } else {\n            let temp_check_box = refCheckBoxJawaban;\n            temp_check_box[idxSoal].jawaban[idx] = '';\n            if (temp_check_box[idxSoal].nested_jawaban) {\n                temp_check_box[idxSoal].nested_jawaban[soalChild.id].jawaban = '';\n            }\n            refSetCheckBoxJawaban(temp_check_box);\n        }\n        setIsChecked(isChecked => !isChecked);\n    }\n\n    const handleChange = event => {\n        handleChangeCheckbox(event.target.checked);\n    };\n\n    const handleAssesmentChangeRadio = (event, indexChildSoal) => {\n        console.log('FIRE')\n        let temp_check_box = refCheckBoxJawaban;\n        temp_check_box[soalChild.parent_id].jawaban[idx] = opsi;\n        temp_check_box[idxSoal].nested_jawaban[indexChildSoal].jawaban = event.target.value;\n        refSetCheckBoxJawaban(temp_check_box);\n        setIsChecked(true);\n    }\n\n    return (\n        <div className={\"flex items-center\"}>\n            <div className=\"flex flex-col\">\n                <div>\n                    <input\n                        checked={isChecked}\n                        onChange={handleChange}\n                        id={\"checked-checkbox-\" + idx}\n                        type=\"checkbox\"\n                        value={isChecked}\n                        className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\" />\n                    <label htmlFor={\"checked-checkbox-\" + idx} className={\"ml-2 text-md font-large text-gray-900\"}>{label}</label>\n                </div>\n                {showChild && (\n                    <div className=\"pl-10 pt-1\">\n                        {soalChild?.assesment_opsi?.map((el, i) => {\n                            return (\n                                <div className={\"flex items-center\"} key={el.key_opsi}>\n                                    <div className=\"flex flex-col\">\n                                        <div>\n                                            <input\n                                                checked={refCheckBoxJawaban[idxSoal].nested_jawaban[soalChild.id].jawaban === el.key_opsi}\n                                                onChange={(e) => {\n                                                    handleAssesmentChangeRadio(e, soalChild.id);\n                                                    setFlagReRender(flagReRender => !flagReRender);\n                                                }}\n                                                id={\"checked-checkbox-\" + `${el.key_opsi}-${soalChild.id}`}\n                                                name={\"opsi_nested_\" + soalChild.id}\n                                                type=\"radio\"\n                                                value={el.key_opsi}\n                                                className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\" />\n                                            <label htmlFor={\"checked-checkbox-\" + `${el.key_opsi}-${soalChild.id}`} className={\"ml-2 text-md font-large text-gray-900 cursor-pointer\"}>{el.label_opsi}</label>\n                                        </div>\n                                    </div>\n                                </div>)\n                        })}\n                    </div>\n                )}\n            </div>\n        </div>);\n}\n\nAssesmentCheckBox.propTypes = {\n    label: PropTypes.string.isRequired,\n    idx: PropTypes.number.isRequired,\n    refCheckBoxJawaban: PropTypes.object.isRequired,\n    refSetCheckBoxJawaban: PropTypes.func.isRequired,\n    idxSoal: PropTypes.number.isRequired,\n    opsi: PropTypes.string.isRequired,\n    soal: PropTypes.object.isRequired,\n}\n\nexport default AssesmentCheckBox;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nimport soal from './../data/assesment.json';\nimport jawaban from './../data/assesment_history.json';\n\nimport axios from \"axios\";\nimport tokenOrganizer from './../util/tokenOrganizer';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nimport configApi from './../config/api';\nimport { key } from \"localforage\";\nimport AssesmentCheckBox from \"./AssesmentCheckBox\";\nimport AssesmentRadio from \"./AssesmentRadio\";\nimport AssesmentAlert from \"./AssesmentAlert\";\n\nfunction capitalizeFLetter(string) {\n    return string.charAt(0).toUpperCase() +\n        string.slice(1);\n}\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport default function Page() {\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [nilai, setNilai] = React.useState(false);\n    const handleOpen = () => {\n        const reqSubmit = [];\n        let checkBoxJawabanArray = Object.keys(checkBoxJawaban).map((key) => {\n            return checkBoxJawaban[key]\n        });\n        checkBoxJawabanArray.forEach((v, i) => {\n            if (typeof v.jawaban == \"string\" && v.jawaban != '') {\n                reqSubmit.push({\n                    id: v.id,\n                    jawaban: v.jawaban\n                })\n            } else if (typeof v.jawaban == \"object\") {\n                let jawabanArray = Object.keys(v.jawaban).map((key) => {\n                    return v.jawaban[key];\n                });\n                let newJawabanArray = [];\n                jawabanArray.forEach((v, i) => {\n                    if (v != '') {\n                        newJawabanArray.push(v)\n                    }\n                })\n                let fixJawaban = newJawabanArray.join(\",\");\n                if (fixJawaban != '') {\n                    reqSubmit.push({\n                        id: v.id,\n                        jawaban: fixJawaban,\n                    });\n                }\n\n            }\n            if (v.nested_jawaban) {\n                let result = Object.keys(v.nested_jawaban).map((key) => {\n                    return v.nested_jawaban[key]\n                });\n                result.forEach((vr, ir) => {\n                    if (vr.jawaban != '') {\n                        reqSubmit.push({\n                            id: vr.id,\n                            jawaban: vr.jawaban,\n                        })\n                    }\n                })\n            }\n        })\n\n        axios\n            .post(`${configApi.BASE_URL}/assesment/${studi_kasus}/submit`, {\n                jawaban: reqSubmit,\n            }, {\n                headers: {\n                    Authorization: \"Bearer \" + tokenOrganizer.getToken()\n                }\n            })\n            .then((response) => {\n                setNilai(response.data.data.nilai)\n                setOpen(true)\n            }).catch((err) => {\n                setOpen(true)\n            });\n    };\n    const handleSubmit = () => {\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        navigate(`/studi-kasus/${studi_kasus}`)\n    };\n    const navigate = useNavigate();\n\n    const [mahasiswa, setMahasiswa] = useState({});\n    const [nestedSoalFlagOpsi, setNestedSoalFlagOpsi] = useState({});\n    const [nestedSoalFlagOpsiMaster, setNestedSoalFlagOpsiMaster] = useState({});\n    const [nestedSoalFlag, setNestedSoalFlag] = useState(null);\n\n    const [masterSoal, setMasterSoal] = useState([]);\n    const [stepSoal, setStepSoal] = useState(0);\n    const [currentSoal, setCurrentSoal] = useState(masterSoal[stepSoal]);\n    const [textNext, setTextNext] = useState(\"Selanjutnya\");\n    const [opsiValue, setOpsiValue] = useState(0);\n    const [calculateNilai, setCalculateNilai] = useState(0);\n    // const [checkBox, setCheckBox] = useState(null);\n    const [checkBoxJawaban, setCheckBoxJawaban] = useState({});\n    const [jumlahSoal, setJumlahSoal] = useState(masterSoal.length);\n    const [jumlahJawaban, setJumlahJawaban] = useState(0);\n    const [percentage, setPercentage] = useState(((stepSoal + 1 / masterSoal.length) * 100).toFixed(0));\n    const [isDijawab, setIsDijawab] = useState(0);\n    const [firstLetterUppercase, setFirstLetterUppercase] = useState('');\n\n\n    const params = useParams();\n    const studi_kasus = params.studiKasus;\n\n    useEffect(() => {\n\n        setIsDijawab();\n    }, [checkBoxJawaban])\n\n    useEffect(() => {\n        if (stepSoal == masterSoal.length - 1) {\n            setTextNext(\"Selesai\")\n        } else {\n            setTextNext(\"Selanjutnya\")\n        }\n    }, [nestedSoalFlagOpsiMaster])\n\n    useEffect(() => {\n        if (stepSoal == masterSoal.length - 1) {\n            setTextNext(\"Selesai\")\n        } else {\n            setTextNext(\"Selanjutnya\")\n        }\n    }, [stepSoal])\n\n    useEffect(() => {\n        let token = tokenOrganizer.getToken();\n\n        axios\n            .get(`${configApi.BASE_URL}/assesment/${studi_kasus}/soal`, {\n                headers: {\n                    Authorization: \"Bearer \" + token\n                }\n            })\n            .then((response) => {\n                let soal_response = response.data.data;\n                let blanko_form = {};\n                let blanko_nested = {};\n                soal_response.forEach((element, ix) => {\n                    let single_blanko = {\n                        id: element.id,\n                        jawaban: '',\n                    }\n                    if (element.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.length > 0) {\n                        single_blanko[\"nested_jawaban\"] = {};\n                        element.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.forEach((val) => {\n                            single_blanko[\"nested_jawaban\"][val.assesment_assesment_mapping_assesment_idToassesment.id] = {\n                                id: val.assesment_assesment_mapping_assesment_idToassesment.id,\n                                opsi: val.opsi,\n                                jawaban: '',\n                            }\n                            blanko_nested[val.assesment_assesment_mapping_assesment_idToassesment.id] = val.assesment_assesment_mapping_assesment_idToassesment;\n                        });\n                    }\n                    if (element.tipe_soal == \"multi_opsi\") {\n                        single_blanko['jawaban'] = Array(element.assesment_opsi.length).fill('');\n                    }\n                    blanko_form[element.id] = single_blanko;\n                });\n                setCheckBoxJawaban(blanko_form);\n                setMasterSoal(soal_response);\n                setPercentage(0 / soal_response.length);\n                setJumlahSoal(soal_response.length);\n                setCurrentSoal(soal_response[0]);\n                setStepSoal(0);\n            }).catch((err) => {\n                console.error(err)\n                //   setOpen(true)\n            });\n\n        axios\n            .get(`${configApi.BASE_URL}/profile-mahasiswa`, {\n                headers: {\n                    Authorization: \"Bearer \" + token\n                }\n            })\n            .then((response) => {\n                let data = response.data.data;\n                setMahasiswa(data);\n            }).catch((err) => {\n                console.error(err)\n                //   setOpen(true)\n            });\n\n        axios\n            .get(`${configApi.BASE_URL}/studi_kasus/${studi_kasus}/header`, {\n                headers: {\n                    Authorization: \"Bearer \" + token\n                }\n            })\n            .then((response) => {\n                let data = response.data.data;\n                setFirstLetterUppercase(capitalizeFLetter(data.nama));\n            }).catch((err) => {\n                console.error(err)\n                //   setOpen(true)\n            });\n    }, [])\n\n    useEffect(() => {\n    }, [stepSoal])\n\n\n\n    function handleClickNavigate(path) {\n        navigate(path);\n    }\n\n    function checkMultipleJawaban(toCompare, keyFind) {\n        keyFind.forEach((v, i) => {\n            if (toCompare.indexOf(v) > -1) {\n                return true;\n            }\n        });\n        return false;\n    }\n\n    function setOpsiRadio(id, opsi, index) {\n        let nextCheckBox = checkBoxJawaban;\n        nextCheckBox[id].jawaban = opsi;\n        setCheckBoxJawaban.bind(this, nextCheckBox);\n        setNestedSoalFlag(index);\n    }\n\n    return (\n        <>\n            <section className=\"absolute top-0 w-full h-screen bg-slate-100\">\n                <div className=\"py-6 bg-gray-900 text-center text-white\">\n                    Assesment {firstLetterUppercase}\n                </div>\n                <div className={`w-full flex flex-col sm:flex-row flex-grow overflow-hidden bg-blue-500`}>\n                    <main role=\"main\" className=\"w-full flex-grow p-4 overflow-auto bg-slate-100 text-gray-700\">\n                        <div className={`h-full w-full bg-white p-6 rounded text-lg max-h-[80vh] flex flex-col space-y-5 overflow-y-auto`}>\n                            {stepSoal != masterSoal.length - 1 && (\n                                <div className=\"w-full flex justify-end\">\n                                    <button className=\"w-[240px]justify-end text-center bg-blue-500 hover:bg-slate-200 text-white hover:text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                                        type=\"button\"\n                                        onClick={() => {\n                                            let newStep = stepSoal + 1\n                                            if (newStep < masterSoal.length) {\n                                                setStepSoal(newStep)\n                                                setCurrentSoal(masterSoal[newStep])\n                                                setJumlahJawaban(newStep + 1)\n                                                setPercentage((((newStep + 1) / masterSoal.length) * 100).toFixed(2))\n                                                if (newStep == masterSoal.length - 1) {\n                                                    setTextNext(\"Selesai\")\n                                                }\n                                            }\n                                        }} >\n                                        <span className=\"text-center w-full\">Selanjutnya</span>\n                                    </button>\n                                </div>\n                            )}\n                            <div className=\"underline\">{currentSoal?.pertanyaan}</div>\n                            <div>{currentSoal?.deskripsi}</div>\n                            {currentSoal?.assesment_opsi.map(function (key, index) {\n                                if (currentSoal.tipe_soal == \"multi_opsi\") {\n                                    return (<AssesmentCheckBox\n                                        key={`${key.key_opsi}-${currentSoal.id}`}\n                                        opsi={key.key_opsi}\n                                        idx={index}\n                                        label={key.label_opsi}\n                                        refCheckBoxJawaban={checkBoxJawaban}\n                                        refSetCheckBoxJawaban={setCheckBoxJawaban}\n                                        idxSoal={currentSoal.id}\n                                        soal={currentSoal}\n                                    />);\n                                } else {\n                                    return (<div className={\"flex items-center\"} key={key.key_opsi}>\n                                        <div className=\"flex flex-col\">\n                                            <div>\n                                                <input checked={checkBoxJawaban[currentSoal.id].jawaban === key.key_opsi}\n                                                    onChange={(e) => {\n                                                        setOpsiRadio(currentSoal.id, key.key_opsi, index)\n                                                    }}\n                                                    id={\"checked-checkbox-\" + `${key.key_opsi}-${currentSoal.id}`}\n                                                    name=\"opsi\"\n                                                    type=\"radio\"\n                                                    value={key.key_opsi}\n                                                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\" />\n                                                <label htmlFor={\"checked-checkbox-\" + `${key.key_opsi}-${currentSoal.id}`} className={\"ml-2 text-md font-large text-gray-900 cursor-pointer\"} onClick={() => {\n                                                    setOpsiRadio(currentSoal.id, key.key_opsi, index)\n                                                }}>{key.label_opsi}</label>\n                                            </div>\n                                        </div>\n                                    </div>)\n                                }\n                            })}\n                        </div>\n                    </main>\n\n                    <div className=\"sm:w-1/3 md:1/4 w-full flex-shrink flex-grow-0 p-4 bg-slate-100\">\n                        <div className=\"sticky p-4 w-full rounded bg-white h-[80vh] text-gray-700 flex flex-col justify-between\">\n                            <div className=\"grid grid-cols-4 gap-2\">\n                                {masterSoal?.map(function ({ id, pertanyaan, tipe_soal }, index) {\n                                    let render_pertanyaan = pertanyaan;\n                                    if (stepSoal === index) {\n                                        render_pertanyaan = (<strong>{pertanyaan}</strong>);\n                                    }\n                                    let a_class = '';\n                                    if (\n                                        checkBoxJawaban[id].jawaban &&\n                                        typeof checkBoxJawaban[id].jawaban == \"string\" &&\n                                        checkBoxJawaban[id].jawaban != ''\n                                    ) {\n                                        a_class = ' bg-green-500 text-white';\n                                    } else if (\n                                        checkBoxJawaban[id].jawaban &&\n                                        typeof checkBoxJawaban[id].jawaban == \"object\"\n                                    ) {\n                                        let result = Object.keys(checkBoxJawaban[id].jawaban).map((key) => checkBoxJawaban[id].jawaban[key]);\n                                        result.forEach((v, i) => {\n                                            if (v != '') {\n                                                a_class = ' bg-green-500 text-white';\n                                            }\n                                        })\n                                    }\n\n                                    if (index == stepSoal) {\n                                        a_class = ' bg-purple-500 text-white';\n                                    }\n\n\n                                    return (\n                                        <button className={\"w-14 h-14 p-4 border-4\" + a_class}\n                                            onClick={() => {\n                                                setCurrentSoal(masterSoal[index])\n                                                setStepSoal(index)\n                                                setCheckBoxJawaban(checkBoxJawaban)\n                                            }} key={id}\n                                        >\n                                            {index + 1}\n                                        </button>);\n                                })}\n\n                            </div>\n\n                            <button className=\"text-center bg-red-500 hover:bg-slate-200 text-white hover:text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                                type=\"button\"\n                                onClick={() => {\n                                    setOpenDialog(true);\n                                }} >\n                                <span className=\"text-center w-full\">Akhiri Ujian</span>\n                            </button>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"absolute top-0 right-0 p-4 text-white\" id=\"header-mahasiswa\">\n                <div className=\"flex justify-end\">\n                    <div className=\"pr-5\">\n                        <p>{mahasiswa.nama}</p>\n                        <p>{mahasiswa.nim}</p>\n                    </div>\n                    <img\n                        alt='Avatar Mahasiswa'\n                        src={mahasiswa?.imageUrl ?? 'https://ui-avatars.com/api/?background=random&name=Avatar'}\n                        className=\"img-avatar-kasus rounded-full h-[45px]\"\n                    />\n                </div>\n            </section>\n            <AssesmentAlert\n                openDialog={openDialog}\n                setOpenDialog={setOpenDialog}\n                confirmCallback={handleOpen}\n                message={'Apakah anda yakin untuk mengakhiri ujian ini ?'}\n            />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Terima kasih\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Nilai anda : {nilai}\n                    </Typography>\n                </Box>\n            </Modal>\n        </>\n    )\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function AssesmentAlert({\n    openDialog,\n    setOpenDialog,\n    confirmCallback,\n    message,\n}) {\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Dialog\n        open={openDialog}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Perhatian!\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={confirmCallback}>\n            Ya\n          </Button>\n          <Button onClick={handleClose} autoFocus>Batal</Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n"],"names":["module","exports","BASE_URL","_ref","_soalChild$assesment_","label","idx","refCheckBoxJawaban","refSetCheckBoxJawaban","idxSoal","opsi","soal","_useState","useState","_useState2","_slicedToArray","setFlagReRender","_useState3","_useState4","showChild","setShowChild","_useState5","_useState6","soalChild","setSoalChild","_useState7","_useState8","setRefChildJawaban","_useState9","jawaban","_useState10","isChecked","setIsChecked","useEffect","nested_jawaban","_refCheckBoxJawaban$i","result","Object","keys","map","key","assesment_mapping_assesment_mapping_parent_assesment_idToassesment","forEach","element","_element$assesment_as","id","assesment_assesment_mapping_assesment_idToassesment","newEl","_objectSpread","parent_id","parent_assesment_id","opsi_jawaban","opsi_jawaban_index","_refCheckBoxJawaban$i2","_element$assesment_as2","_jsx","className","children","_jsxs","checked","onChange","event","temp_check_box","handleChangeCheckbox","target","type","value","htmlFor","assesment_opsi","el","i","key_opsi","e","indexChildSoal","console","log","handleAssesmentChangeRadio","flagReRender","concat","name","label_opsi","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Page","_mahasiswa$imageUrl","_React$useState","React","_React$useState2","open","setOpen","_React$useState3","_React$useState4","openDialog","setOpenDialog","_React$useState5","_React$useState6","nilai","setNilai","navigate","useNavigate","mahasiswa","setMahasiswa","nestedSoalFlagOpsiMaster","setNestedSoalFlag","masterSoal","setMasterSoal","_useState11","_useState12","stepSoal","setStepSoal","_useState13","_useState14","currentSoal","setCurrentSoal","_useState15","_useState16","setTextNext","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","checkBoxJawaban","setCheckBoxJawaban","_useState23","length","_useState24","setJumlahSoal","_useState25","_useState26","setJumlahJawaban","_useState27","toFixed","_useState28","setPercentage","_useState29","_useState30","setIsDijawab","_useState31","_useState32","firstLetterUppercase","setFirstLetterUppercase","studi_kasus","useParams","studiKasus","setOpsiRadio","index","nextCheckBox","bind","this","token","tokenOrganizer","axios","get","configApi","headers","Authorization","then","response","soal_response","data","blanko_form","blanko_nested","ix","single_blanko","val","tipe_soal","Array","fill","catch","err","error","string","nama","charAt","toUpperCase","slice","_Fragment","role","onClick","newStep","pertanyaan","deskripsi","AssesmentCheckBox","a_class","v","nim","alt","src","imageUrl","AssesmentAlert","confirmCallback","reqSubmit","push","jawabanArray","newJawabanArray","fixJawaban","join","vr","ir","post","message","Modal","onClose","Box","sx","Typography","variant","component","mt","handleClose","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus"],"sourceRoot":""}