{"version":3,"file":"static/js/466.505919f4.chunk.js","mappings":"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","sources":["pages/Assesment.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nimport soal from './../data/assesment.json';\nimport jawaban from './../data/assesment_history.json';\n\nimport axios from \"axios\";\nimport tokenOrganizer from './../util/tokenOrganizer';\nconst baseURL = \"https://sinalacare-api.neonauby.com\";\n\nfunction capitalizeFLetter(string) {\n    return string.charAt(0).toUpperCase() +\n        string.slice(1);\n}\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport default function Page() {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const navigate = useNavigate();\n\n    const [masterSoal, setMasterSoal] = useState([]);\n    const [stepSoal, setStepSoal] = useState(0);\n    const [currentSoal, setCurrentSoal] = useState(masterSoal[stepSoal]);\n    // const [checkBox, setCheckBox] = useState(Array(currentSoal.opsi.length).fill(false));\n    const [textNext, setTextNext] = useState(\"Selanjutnya\");\n    const [opsiValue, setOpsiValue] = useState(0);\n    const [calculateNilai, setCalculateNilai] = useState(0);\n    const [checkBox, setCheckBox] = useState(null);\n    const [checkBoxJawaban, setCheckBoxJawaban] = useState({});\n    const [jumlahSoal, setJumlahSoal] = useState(masterSoal.length);\n    const [jumlahJawaban, setJumlahJawaban] = useState(0);\n    const [percentage, setPercentage] = useState(((stepSoal + 1 / masterSoal.length) * 100).toFixed(0));\n\n\n    const params = useParams();\n    const studi_kasus = params.studiKasus;\n\n\n    useEffect(() => {\n        let token = tokenOrganizer.getToken();\n\n        axios\n            .get(`${baseURL}/api/v1/assesment/${studi_kasus}/soal`, {\n                headers: {\n                    Authorization: \"Bearer \" + token\n                }\n            })\n            .then((response) => {\n                let soal_response = response.data.data;\n                let blanko_form = {};\n                soal_response.forEach((element, ix) => {\n                    let single_blanko = {\n                        id: element.id,\n                        jawaban: null,\n                    }\n                    if (element.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.length > 0) {\n                        single_blanko[\"nested_jawaban\"] = {};\n                        element.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.forEach((val) => {\n                            single_blanko[\"nested_jawaban\"][val.assesment_assesment_mapping_assesment_idToassesment.id] = {\n                                id: val.assesment_assesment_mapping_assesment_idToassesment.id,\n                                opsi: val.opsi,\n                                jawaban: null,\n                            }\n                        });\n                    }\n                    if (element.tipe_soal == \"multi_opsi\") {\n                        single_blanko['jawaban'] = Array(element.assesment_opsi.length).fill(null);\n                    }\n                    blanko_form[element.id] = single_blanko;\n                });\n                setCheckBoxJawaban(blanko_form);\n                setMasterSoal(soal_response);\n                setPercentage(0 / soal_response.length);\n                setJumlahSoal(soal_response.length);\n                setCurrentSoal(soal_response[0]);\n                setStepSoal(0);\n            }).catch((err) => {\n                console.error(err)\n                //   setOpen(true)\n            });\n    }, [])\n\n    useEffect(() => {\n        // let temp_check_box = checkBoxJawaban;\n        // if (currentSoal?.tipe_soal == \"multi_opsi\") {\n        //     temp_check_box[stepSoal] = Array(currentSoal?.assesment_opsi?.length).fill(null);\n        // }\n        // setCheckBoxJawaban(temp_check_box);\n    }, [stepSoal])\n\n\n\n    function handleClickNavigate(path) {\n        navigate(path);\n    }\n\n    console.log(\"checkBoxJawaban[stepSoal] : \", checkBoxJawaban[stepSoal])\n\n    const firstLetterUppercase = capitalizeFLetter('Diabetes');\n    return (\n        <>\n            <section className=\"absolute top-0 w-full h-screen bg-slate-100\">\n                <div className=\"py-6 bg-gray-900 text-center text-white\">\n                    Assesment {firstLetterUppercase}\n                </div>\n                <div className={`w-full flex flex-col sm:flex-row flex-grow overflow-hidden bg-blue-500`}>\n                    <div className=\"sm:w-1/3 md:1/4 w-full flex-shrink flex-grow-0 p-4 bg-slate-100\">\n                        <div className=\"sticky p-4 w-full rounded bg-white h-[80vh] text-gray-700 flex flex-col justify-between\">\n                            {/* <div className=\"\"> */}\n                            <ul className=\"flex sm:flex-col overflow-hidden content-center justify-between\">\n                                {masterSoal?.map(function ({ id, pertanyaan }, index) {\n                                    let render_pertanyaan = pertanyaan;\n                                    if (stepSoal === index) {\n                                        render_pertanyaan = (<strong>{pertanyaan}</strong>);\n                                    }\n                                    return (<li className=\"mb-2 cursor-pointer\" onClick={() => {\n                                        setCurrentSoal(masterSoal[index])\n                                        setStepSoal(index)\n                                        setCheckBoxJawaban(checkBoxJawaban)\n                                        if (index == masterSoal.length - 1) {\n                                            setTextNext(\"Selesai\")\n                                        } else {\n                                            setTextNext(\"Selanjutnya\")\n                                        }\n                                    }} key={id}>{render_pertanyaan}</li>)\n                                })}\n                            </ul>\n                            {/* </div> */}\n                            <div>\n                                <span className=\"text-sm text-slate-500 mb-2\">Progress Assesment ({jumlahJawaban}/{jumlahSoal})</span>\n                                <div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n                                    <div className={`bg-blue-600 h-2.5 rounded-full]`} style={{\n                                        width: percentage + '%'\n                                    }}></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <main role=\"main\" className=\"w-full flex-grow p-4 overflow-auto bg-slate-100 text-gray-700\">\n                        <div className={`h-full w-full bg-white p-6 rounded text-lg max-h-[80vh] flex flex-col space-y-5 overflow-y-auto`}>\n\n                            <div className=\"underline\">{currentSoal?.pertanyaan}</div>\n\n                            <div>{currentSoal?.deskripsi}</div>\n\n                            {currentSoal?.assesment_opsi.map(function (key, index) {\n                                if (currentSoal.tipe_soal == \"multi_opsi\") {\n\n                                    return (<div className={\"flex items-center\"} key={key.key_opsi}>\n                                        <input\n                                            checked={checkBoxJawaban[currentSoal.id].jawaban[index]}\n                                            onChange={(e) => {\n                                                console.log(checkBoxJawaban[currentSoal.id].jawaban[index] == key.key_opsi)\n                                                let temp_check_box = checkBoxJawaban;\n                                                if (temp_check_box[currentSoal.id].jawaban[index] == e.target.value) {\n                                                    temp_check_box[currentSoal.id].jawaban[index] = null;\n                                                } else {\n                                                    temp_check_box[currentSoal.id].jawaban[index] = e.target.value;\n                                                }\n\n                                                console.log(temp_check_box[currentSoal.id].jawaban)\n                                                setCheckBoxJawaban(temp_check_box);\n                                            }}\n                                            id=\"checked-checkbox\"\n                                            type=\"checkbox\"\n                                            value={key.key_opsi}\n                                            className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\" />\n                                        <label htmlFor=\"checked-checkbox\" className={\"ml-2 text-sm font-large text-gray-900\"}>{key.label_opsi}</label>\n                                    </div>)\n\n                                } else {\n                                    return (<div className={\"flex items-center\"} key={key.key_opsi}>\n                                        <input checked={checkBoxJawaban[currentSoal.id].jawaban == key.key_opsi}\n                                            onChange={(e) => {\n                                                let nextCheckBox = checkBoxJawaban;\n                                                nextCheckBox[currentSoal.id].jawaban = e.target.value;\n                                                setCheckBoxJawaban(nextCheckBox);\n                                                setCheckBox(e.target.value);\n                                            }}\n                                            id=\"checked-checkbox\"\n                                            type=\"radio\"\n                                            value={key.key_opsi}\n                                            className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\" />\n                                        <label htmlFor=\"checked-checkbox\" className={\"ml-2 text-sm font-large text-gray-900\"}>{key.label_opsi}</label>\n                                        {checkBoxJawaban[stepSoal] != null && currentSoal.assesment_mapping_assesment_mapping_parent_assesment_idToassesment.length > 0 && (\n                                            <div className={\"flex items-center\"} key={key.key_opsi}>\n                                                |\n                                            </div>\n                                        )}\n                                    </div>)\n                                }\n                            })}\n\n                        </div>\n                    </main>\n                </div>\n                <footer className=\"mt-auto bg-slate-100 h-auto max-w-6xl mx-auto flex justify-between text-white py-2\">\n                    {stepSoal != 0 && (\n                        <button className={\"pointer-cursor bg-blue-400 text-white border-1 border-neutral-700  font-bold py-2 px-4 rounded inline-flex items-center hover:bg-slate-200 hover:text-gray-600 hover:border-neutral-500\"}\n                            type=\"button\"\n                            disabled={textNext == \"Selesai\"}\n                            onClick={() => {\n\n                                let newStep = stepSoal - 1\n                                if (newStep >= 0) {\n                                    setStepSoal(newStep)\n                                    setCurrentSoal(masterSoal[newStep])\n\n\n                                    setJumlahJawaban(newStep)\n                                    setPercentage((((newStep) / masterSoal.length) * 100).toFixed(2))\n                                }\n                            }}\n                        >\n                            <span>Sebelumnya</span>\n                        </button>\n                    )}\n                    {stepSoal == 0 && (\n                        <div></div>\n                    )}\n                    <button className=\"bg-blue-400 hover:bg-slate-200 text-white hover:text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                        type=\"button\"\n                        onClick={() => {\n                            if (textNext == \"Selesai\") {\n                                handleOpen()\n                            } else {\n                                let newStep = stepSoal + 1\n                                if (newStep < masterSoal.length) {\n                                    // setCalculateNilai(calculateNilai + opsiValue)\n                                    setStepSoal(newStep)\n                                    setCurrentSoal(masterSoal[newStep])\n                                    setJumlahJawaban(newStep + 1)\n                                    setPercentage((((newStep + 1) / masterSoal.length) * 100).toFixed(2))\n                                    if (newStep == masterSoal.length - 1) {\n                                        setTextNext(\"Selesai\")\n                                    }\n                                }\n                            }\n                        }} >\n                        <span>{textNext}</span>\n                    </button>\n                </footer>\n            </section>\n            <section className=\"absolute top-0 left-0 w-full p-4\" id=\"header\">\n                <button className=\"bg-white hover:bg-slate-400 text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                    type=\"button\"\n                    onClick={() => handleClickNavigate('/studi-kasus/' + studi_kasus)}>\n                    <span>Kembali</span>\n                </button>\n            </section>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Terima kasih\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Nilai anda : {calculateNilai}\n                    </Typography>\n                </Box>\n            </Modal>\n        </>\n    )\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["baseURL","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Page","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","navigate","useNavigate","_useState","useState","_useState2","masterSoal","setMasterSoal","_useState3","_useState4","stepSoal","setStepSoal","_useState5","_useState6","currentSoal","setCurrentSoal","_useState7","_useState8","textNext","setTextNext","_useState9","_useState10","_useState11","_useState12","calculateNilai","_useState13","_useState14","setCheckBox","_useState15","_useState16","checkBoxJawaban","setCheckBoxJawaban","_useState17","length","_useState18","jumlahSoal","setJumlahSoal","_useState19","_useState20","jumlahJawaban","setJumlahJawaban","_useState21","toFixed","_useState22","percentage","setPercentage","studi_kasus","useParams","studiKasus","useEffect","token","tokenOrganizer","axios","get","concat","headers","Authorization","then","response","soal_response","data","blanko_form","forEach","element","ix","single_blanko","id","jawaban","assesment_mapping_assesment_mapping_parent_assesment_idToassesment","val","assesment_assesment_mapping_assesment_idToassesment","opsi","tipe_soal","Array","assesment_opsi","fill","catch","err","console","error","log","string","firstLetterUppercase","charAt","toUpperCase","slice","_jsxs","_Fragment","children","className","_jsx","map","_ref","index","pertanyaan","render_pertanyaan","onClick","role","deskripsi","key","checked","onChange","e","key_opsi","temp_check_box","target","value","type","htmlFor","label_opsi","nextCheckBox","disabled","newStep","Modal","onClose","Box","sx","Typography","variant","component","mt","_excluded","defaultTheme","createTheme","options","arguments","undefined","themeId","_options$defaultClass","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","_extendSxProp$compone","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","ClassNameGenerator","generate"],"sourceRoot":""}