{"version":3,"file":"static/js/466.a02c7187.chunk.js","mappings":"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","sources":["pages/Assesment.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nimport soal from './../data/assesment.json';\nimport jawaban from './../data/assesment_history.json';\n\nfunction capitalizeFLetter(string) {\n    return string.charAt(0).toUpperCase() +\n        string.slice(1);\n}\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconsole.log({ soal })\n\nexport default function Page(params) {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const navigate = useNavigate();\n\n    function handleClickNavigate(path) {\n        navigate(path);\n    }\n\n    const [stepSoal, setStepSoal] = useState(0);\n    const [currentSoal, setCurrentSoal] = useState(soal[stepSoal]);\n    // const [checkBox, setCheckBox] = useState(Array(currentSoal.opsi.length).fill(false));\n    const [textNext, setTextNext] = useState(\"Selanjutnya\");\n    const [opsiValue, setOpsiValue] = useState(0);\n    const [calculateNilai, setCalculateNilai] = useState(0);\n    const [checkBox, setCheckBox] = useState(null);\n    const [jumlahSoal, setJumlahSoal] = useState(soal.length);\n    const [jumlahJawaban, setJumlahJawaban] = useState(jawaban.length);\n    const [percentage, setPercentage] = useState(((stepSoal + 1 / soal.length) * 100).toFixed(0));\n\n    console.log(percentage)\n    const firstLetterUppercase = capitalizeFLetter('Diabetes');\n    return (\n        <>\n            <section className=\"absolute top-0 w-full h-screen bg-slate-100\">\n                <div className=\"py-6 bg-gray-900 text-center text-white\">\n                    Assesment {firstLetterUppercase}\n                </div>\n                <div className={`w-full flex flex-col sm:flex-row flex-grow overflow-hidden bg-blue-500`}>\n                    <div className=\"sm:w-1/3 md:1/4 w-full flex-shrink flex-grow-0 p-4 bg-slate-100\">\n                        <div className=\"sticky p-4 w-full rounded bg-white h-[80vh] text-gray-700 flex flex-col justify-between\">\n                            <ul className=\"flex sm:flex-col overflow-hidden content-center justify-between\">\n                                {soal.map(function ({ id, pertanyaan }) {\n                                    return (<li className=\"mb-2\" key={id}>{pertanyaan}</li>)\n                                })}\n                            </ul>\n                            <div>\n                                <span className=\"text-sm text-slate-500 mb-2\">Progress Assesment ({jumlahJawaban}/{jumlahSoal})</span>\n                                <div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n                                    <div className={`bg-blue-600 h-2.5 rounded-full]`} style={{\n                                        width: percentage + '%'\n                                    }}></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <main role=\"main\" className=\"w-full flex-grow p-4 overflow-auto bg-slate-100 text-gray-700\">\n                        <div className={`h-full w-full bg-white p-6 rounded text-lg max-h-[80vh] flex flex-col space-y-5 overflow-y-auto`}>\n                            <div>{currentSoal.deskripsi}</div>\n\n                            {Object.keys(currentSoal.opsi).map(function (key, index) {\n                                return (<div className={\"flex items-center\"} key={key}>\n                                    <input checked={checkBox == key} onChange={(e) => {\n                                        setCheckBox(e.target.value);\n                                        if (e.target.value == currentSoal.jawaban) {\n                                            setOpsiValue(currentSoal.nilai)\n                                        } else {\n                                            setOpsiValue(currentSoal.penalti)\n                                        }\n                                    }} id=\"checked-checkbox\"\n                                        type=\"radio\"\n                                        value={key}\n                                        className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\" />\n                                    <label htmlFor=\"checked-checkbox\" className={\"ml-2 text-sm font-large text-gray-900\"}>{currentSoal.opsi[key]}</label>\n                                </div>)\n                            })}\n\n                        </div>\n                    </main>\n                </div>\n                <footer className=\"mt-auto bg-slate-100 h-auto max-w-6xl mx-auto flex justify-between text-white py-2\">\n                    <button className=\"bg-blue-400 hover:bg-slate-200 text-white hover:text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                        type=\"button\"\n                        disabled={true}\n                    // onClick={() => alert('/studi-kasus/pneumonia')}\n                    >\n                        <span>Sebelumnya</span>\n                    </button>\n                    <button className=\"bg-blue-400 hover:bg-slate-200 text-white hover:text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                        type=\"button\"\n                        onClick={() => {\n                            if (textNext == \"Selesai\") {\n                                handleOpen()\n                            } else {\n                                let newStep = stepSoal + 1\n                                if (newStep < soal.length) {\n                                    setCalculateNilai(calculateNilai + opsiValue)\n                                    setStepSoal(newStep)\n                                    setCurrentSoal(soal[newStep])\n                                    setJumlahJawaban(newStep + 1)\n                                    setPercentage((((newStep + 1) / soal.length) * 100).toFixed(2))\n                                    if (newStep == soal.length - 1) {\n                                        setTextNext(\"Selesai\")\n                                    }\n                                }\n                            }\n                        }} >\n                        <span>{textNext}</span>\n                    </button>\n                </footer>\n            </section>\n            <section className=\"absolute top-0 left-0 w-full p-4\" id=\"header\">\n                <button className=\"bg-white hover:bg-slate-400 text-gray-600 border-1 border-neutral-700 hover:border-neutral-500 font-bold py-2 px-4 rounded inline-flex items-center\"\n                    type=\"button\"\n                    onClick={() => handleClickNavigate('/studi-kasus/pneumonia')}>\n                    <span>Kembali</span>\n                </button>\n            </section><Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Terima kasih\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Nilai anda : {calculateNilai}\n                    </Typography>\n                </Box>\n            </Modal>\n        </>\n    )\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Page","params","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","navigate","useNavigate","_useState","useState","_useState2","stepSoal","setStepSoal","_useState3","soal","_useState4","currentSoal","setCurrentSoal","_useState5","_useState6","textNext","setTextNext","_useState7","_useState8","opsiValue","setOpsiValue","_useState9","_useState10","calculateNilai","setCalculateNilai","_useState11","_useState12","checkBox","setCheckBox","_useState13","length","_useState14","jumlahSoal","_useState15","jawaban","_useState16","jumlahJawaban","setJumlahJawaban","_useState17","toFixed","_useState18","percentage","setPercentage","console","log","string","firstLetterUppercase","charAt","toUpperCase","slice","_jsxs","_Fragment","children","className","_jsx","map","_ref","id","pertanyaan","role","deskripsi","Object","keys","opsi","key","index","checked","onChange","e","target","value","nilai","penalti","type","htmlFor","disabled","onClick","newStep","Modal","onClose","Box","sx","Typography","variant","component","mt","_excluded","defaultTheme","createTheme","options","arguments","undefined","themeId","_options$defaultClass","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","_extendSxProp$compone","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","ClassNameGenerator","generate"],"sourceRoot":""}